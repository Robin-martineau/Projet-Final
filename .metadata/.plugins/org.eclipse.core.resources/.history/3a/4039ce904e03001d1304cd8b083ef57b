/*
 * Subject – interface or abstract class defining the operations for attaching and de-attaching observers to the subject.
 * ConcreteSubject – concrete Subject class. It maintain the state of the object and when a change in the state occurs it notifies the attached Observers.
 * Observer – interface or abstract class defining the operations to be used to notify this object.
 * ConcreteObserver – concrete Observer implementations.
 */
    
public class Main 
{
    public static void main(String[] args) 
    {
        MessageSubscriberOne s1 = new MessageSubscriberOne();
        MessageSubscriberTwo s2 = new MessageSubscriberTwo();
        MessageSubscriberThree s3 = new MessageSubscriberThree();
         
        MessagePublisher p = new MessagePublisher();
         
        p.attach(s1);
        p.attach(s2);
         
        p.notifyUpdate("First Message");   //s1 and s2 will receive the update
         
        p.detach(s1);
        p.attach(s3);
         
        p.notifyUpdate("Second Message"); //s2 and s3 will receive the update
    }
}